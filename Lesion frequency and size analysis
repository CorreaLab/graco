##########################LESION FREQUENCIES#######################
library("tidyverse")
library("ordinal")

############Coral health statistics
#Load and check file for statistics
graco <- read.csv("graco_coralhealth_xi2.csv")
str(graco)

#check data distributions
graccomp2 <-table(graco$treatment, graco$health)

x <- clm(as.factor(health) ~ factor(treatment)+itcol, data = graco)
x
summary(x)
Anova(x)

#Load and check data file for figure
graco <- read.csv("shorthealth2.csv")
str(graco)

############Make figure 1 panel A
gracolors <- c("black", "grey", "coral")

gracofig <- ggplot(graco, aes(x=Treatment, y=Count,fill=factor(Health, levels = c("Dead","Lesion", "Healthy"))))+
  geom_bar(stat="identity", color="black")+
  scale_fill_manual(values=gracolors)+
  labs(fill = "Health",y="Replicates", x="Treatment")+
  bar_theme()+
  lims(y=c(0,13))+
  guides(fill=guide_legend(nrow=1,byrow=TRUE))+
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())+
  theme_classic()+
  theme(legend.position = "top")
gracofig

##########################LESION SIZES#######################
library(emmeans)
library(ggsignif)
library(car)

#Load and check data
gc <- read.csv("graco_lesionsize_data.csv")
str(gc)

#Run linear model and pairwise comparisons
gctest <- lm(log(dead_polyps)~Treatment, data= gc)
check_model(gctest)
gcemms <-emmeans(gctest, ~Treatment, adjust="Tukey") 
pairs(gcemms, adjust="Tukey")

#Calculate means
gcmean<- gc %>%
  group_by(Treatment)%>%
  dplyr::summarize(mean=mean(dead_polyps), sd=sd(dead_polyps))

#Generate figure
lesionplot <- ggplot(gc, aes(y=dead_polyps, x=Treatment))+
  geom_boxplot()+
  geom_point()+
  labs(x="Treatment", Y="Lesion size (polyps)")+
  ylab("Lesion size (polyps)") +
  geom_signif(comparisons = list(c("SG", "FG")), 
              map_signif_level=TRUE, y_position = 107,annotation ="*")+
  lims(y= c(1.3,5.2))+
  lims(y= c(0,115))+
  theme_classic()
lesionplot

#Plot both panels together
plot_grid(gracofig,lesionplot, nrow=2, labels = c("A","B"), rel_heights =c(1.4,1))

